Documentation of all current routes and what they currently do as well as the JSON format needed on the request and what is returned on a succesful response.

Account Handling:

POST /api/register: Registers a SuperUser
Request: {
    email: string,
    fname: string,
    lname: string,
    password: string,
    address: string,
    company: string,
    telephone: string
}
Response: {
    message: "Super User has been registered",
    data: superuser object
}

POST /api/login: Login as a SuperUser
Request: {
    email: string,
    password: string
}
Response: {
    message: "Super User has been registered",
    data: superuser object
}

GET /api/superuser/auth (Not really sure how to document this one)

POST /api/:_id/create: Registers and creates a SubUser (All body data is that of the SubUser that you want to create)
Request: {
    email: string ,
    password: string
    fname: string,
    lname: string,
    telephone: string,
}
Response: {
    message: "Subuser created",
    data: SubUser object
}

SAQ Handling:

POST /api/admin/question: Posts an SAQ question
Request: {
    questiontext: string (The actual question),
    answertype: number (Currently have not set what number each type is assigned to),
    id: string (We manually assign the question's ID here)
}
Response: {
    message: "Question posted",
    data: Question object
}

POST /api/admin/saqtemplate: Posts an SAQ template
Request: {
    name: string ("SAQAV2-4" for example),
    questions: Array of question IDs
}
Response: {
    message: "SAQ template posted",
    data: SAQTemplate object
}

GET /api/SAQ: Get questions from SAQ template
Request: {
    id: String (The SAQ template's ID)
}
Response {
    sends JSON of question objects.
}

POST /api/SAQ/:_id/answerquestion: Updates the corresponding SAQ form and database
Request: {
    answers: {
        Keys of fields and their responses. For example:
        "8.5.1":"No",
        "8.5.2":"N/A",
        "12.1.2.a":"Yes"
    },
    name: String (What the file will be named on S3 (there will also be a timestamp behind it)),
    templateid: String (The ID of the SAQ template that you want) 
}
Response: {
    message: "Success" 
    I'll try to update this later
}

POST /api/SAQ/:_id/accountSAQ: Creates answered questions and Account SAQ from SAQ template
Request: {
    templateid: String (The ID of whatever SAQ template you want),
    name: String (Whatever you want the name of the account SAQ to be)
}
Response: {
    data: The new account SAQ object
}
